<!-- Copyright (c) Microsoft Corporation. All rights reserved. -->
<HTML DIR="LTR">

<HEAD>
	<TITLE>MFC 添加类向导</TITLE>
	<META NAME="vs_targetSchema" CONTENT="http://schemas.microsoft.com/intellisense/ie5">
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=gb2312">
	<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">
	<LINK ID="LINKURL" REL="stylesheet" HREF="../../../../../2052/NewStyles.css">
	<SYMBOL NAME="CLASS_NAME_ROOT" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="CLASS_NAME" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="BASE_CLASS" TYPE="text" VALUE="CWnd"></SYMBOL>
	<SYMBOL NAME="HEADER_FILE" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="IMPL_FILE" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="HEADER_FILE_VALID" TYPE="bool" VALUE="false"></SYMBOL>
	<SYMBOL NAME="IMPL_FILE_VALID" TYPE="bool" VALUE="false"></SYMBOL>
	<SYMBOL NAME="INCLUDE_HEADER" TYPE="text" VALUE=""></SYMBOL>

	<SYMBOL NAME="IDD_DIALOG" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="CREATE_DIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>

	<SYMBOL NAME="AUTOMATION_NONE" TYPE=radio VALUE="true"></SYMBOL>
	<SYMBOL NAME="AUTOMATION" TYPE=radio VALUE="false"></SYMBOL>
	<SYMBOL NAME="CREATABLE" TYPE=radio VALUE="false"></SYMBOL>
	<SYMBOL NAME="TYPEID" TYPE="text" VALUE=""></SYMBOL>

	<SYMBOL NAME="TEMPLATE_HEADER" TYPE="text" VALUE="window.h"></SYMBOL>
	<SYMBOL NAME="TEMPLATE_IMPL" TYPE="text" VALUE="window.cpp"></SYMBOL>

	<SYMBOL NAME="DISPIID_STATIC_CONST_GUID_FORMAT" TYPE="text"></SYMBOL>
	<SYMBOL NAME="DISPIID_REGISTRY_FORMAT" TYPE="text"></SYMBOL>
	<SYMBOL NAME="CLSID_REGISTRY_FORMAT" TYPE="text"></SYMBOL>
	<SYMBOL NAME="CLSID_IMPLEMENT_OLECREATE_FORMAT" TYPE="text"></SYMBOL>

	<SYMBOL NAME="ACCESSIBILITY" TYPE="checkbox" VALUE="false"></SYMBOL>

	<SYMBOL NAME="COLESERVERDOC" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="COLECLIENTITEM" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CCOLORDIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CCONNECTIONPOINT" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CDOCOBJECTSERVER" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CDOCOBJECTSERVERITEM" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CFILEDIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CFONTDIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CPAGESETUPDIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CPRINTDIALOG" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CINTERNETSESSION" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CPROPERTYPAGE" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CCONTROLBAR" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CVIEW" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="CVSTOOLSLISTBOX" TYPE="checkbox" VALUE="false"></SYMBOL>

	<SYMBOL NAME="HTML_FILE" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="HTML_FILE_VALID" TYPE="bool" VALUE="false"></SYMBOL>
	<SYMBOL NAME="HTML_ID" TYPE="text" VALUE=""></SYMBOL>

	<SYMBOL NAME="MAX_DOC_TYPE_NAME" TYPE="num" VALUE=15></SYMBOL>
	<SYMBOL NAME="MAX_FILE_NEW_NAME_SHORT" TYPE="num" VALUE=15></SYMBOL>
	<SYMBOL NAME="MAX_FILE_TYPE_ID" TYPE="num" VALUE=39></SYMBOL>
	<SYMBOL NAME="MAX_FILE_NEW_NAME_LONG" TYPE="num" VALUE=40></SYMBOL>
	<SYMBOL NAME="MAX_FILTER_NAME" TYPE="num" VALUE=100></SYMBOL>
	<SYMBOL NAME="DOCUMENT_TYPE_NAME" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_FILE_EXTENSION" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_FILE_TYPE_ID" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_FILE_NEW_NAME_SHORT" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_FILE_NEW_NAME_LONG" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_FILTER_NAME" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="DOCUMENT_MAIN_FRAME_CAPTION" TYPE="text" VALUE=""></SYMBOL>

	<SYMBOL NAME="MERGE_FILE" TYPE="bool" VALUE="false"></SYMBOL>
	<SYMBOL NAME="GEN_DOCTEMPLATE" TYPE="checkbox" VALUE="false"></SYMBOL>
	<SYMBOL NAME="DOCUMENT_CLASS" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="FRAME_CLASS" TYPE="text" VALUE=""></SYMBOL>
	<SYMBOL NAME="MDI_APP" TYPE="bool" VALUE="false"></SYMBOL>
</HEAD>

<BODY BGCOLOR="BUTTONFACE" TOPMARGIN="0" LEFTMARGIN="0" RIGHTMARGIN="0" BOTTOMMARGIN="0" ONLOAD="InitDocument(document);" ONKEYDOWN="OnKey();" ONKEYPRESS="OnPress();">

<TABLE CLASS="ONE" HEIGHT="100%" WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
<COL CLASS="LinkPane"><COL>

  <!--OPEN OF INTRODUCTORY INFORMATION TABLE//-->
  <TR VALIGN="TOP">
	<TD HEIGHT="79" WIDTH="100%" COLSPAN="2">
	 <TABLE CLASS="TWO" BORDER="0" CELLPADDING="0" CELLSPACING="0">
	 <COL WIDTH="12"><COL><COL WIDTH="12">
	  <TR>
	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD CLASS="IMAGE" VALIGN="BOTTOM" WIDTH="110" ROWSPAN="2">
		<DIV CLASS="SMALLA" ID="Layer0">
		 <IMG CLASS="SMALLEST" SRC="../../Images/MFCClass_1.gif" WIDTH="63" HEIGHT="63" ALT="" BORDER="0">
		</DIV>
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="12" WIDTH="6" ROWSPAN="2">
	  	&nbsp;
	   </TD>
	  </TR>

	  <TR>
	   <TD VALIGN="TOP" HEIGHT="65" WIDTH="12">
	  	&nbsp;
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="65">
		<H4 CLASS="HEAD" ID="HEAD">欢迎使用 MFC 添加类向导</H4>
		<P CLASS="SUBHEAD" ID="SUBHEAD">本向导向项目中添加从 MFC 继承的类。  根据所选基类的不同，选项可能会有所更改。</P>
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="65" WIDTH="12">
	  	&nbsp;
	   </TD>
	  </TR>

	  <TR>
	   <TD VALIGN="TOP" CLASS="RULE" COLSPAN="5" HEIGHT="2">
		<TABLE BORDER="0" WIDTH="100%" HEIGHT="1" CELLPADDING="0" CELLSPACING="0">
	  	 <TR VALIGN="TOP">
	  	  <TD HEIGHT="1" WIDTH="100%" BGCOLOR="BUTTONSHADOW"></TD>
	  	  <TD HEIGHT="1" WIDTH="1" BGCOLOR="WINDOW"></TD>
	  	 </TR>
		</TABLE>
	   </TD>
	  </TR>
	 </TABLE>
	</TD>
  </TR>
  <!--CLOSE OF INTRODUCTORY INFORMATION TABLE//-->

  <!--OPEN OF NAVIGATION, CONTENT, AND BUTTON TABLES//-->
  <TR VALIGN="TOP">
	<TD CLASS="Three" VALIGN="TOP" HEIGHT="100%" WIDTH="100%">
	 <TABLE CLASS="fixedSize" HEIGHT="100%" WIDTH="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
  	  <TR VALIGN="TOP">
	   <TD CLASS="threeCustom" VALIGN="TOP">
	   <!--OPEN OF NAVIGATION TABLE//-->

	<TABLE CLASS="THREE" BORDER="0" CELLPADDING="0" CELLSPACING="0">
		<COL WIDTH="12"><COL><COL WIDTH="1">
		 <TR>
	   	  <TD VALIGN="TOP" COLSPAN="3" HEIGHT="12">
	  		&nbsp;
		  </TD>
		 </TR>
		 <TR>
	   	  <TD VALIGN="TOP" HEIGHT="100%">
	  		&nbsp;
		  </TD>
	   	  <TD VALIGN="TOP" HEIGHT="100%">
	   	  <!--OPEN OF NAVIGATIONAL LINKS//-->

		  	<DIV CLASS="LINKSELECTED">
	 	   	 <SPAN CLASS="VERTLINE1">
			  <IMG SRC="../../../../../1033/Images/spacer.gif" WIDTH="1" HEIGHT="1" ALT="" BORDER="0">
			 </SPAN>
			 <SPAN CLASS="HORILINE1">
			  <TABLE WIDTH="167" HEIGHT="100%" BORDER="0" CELLPADDING="0" CELLSPACING="0">
			   <TR VALIGN="TOP">
			    <TD CLASS="DOTTEDLINE" HEIGHT="1">
				</TD>
			   </TR>
			   <TR VALIGN="TOP">
			    <TD HEIGHT="100%">
				 <IMG SRC="../../../../../1033/Images/spacer.gif" WIDTH="1" HEIGHT="28" ALT="" BORDER="0">
			    </TD>
			   </TR>
			   <TR VALIGN="TOP">
			    <TD CLASS="DOTTEDLINE" HEIGHT="1">
			    </TD>
			   </TR>
			  </TABLE>
			 </SPAN>
			 <TABLE WIDTH="160" HEIGHT="28" BORDER="0" CELLPADDING="0" CELLSPACING="0" CLASS="LINKTEXTSELECTED">
			  <TR VALIGN="MIDDLE">
			   <TD WIDTH="100%">
				<SPAN ID="Default" TITLE="指定类名、文件名和要创建的类的类型。">名称</SPAN>
			   </TD>
			   <TD WIDTH="4">
				<IMG SRC="../../../../../1033/Images/spacer.gif" HEIGHT="1" WIDTH="4">
			   </TD>
			  </TR>
			 </TABLE>
			</DIV>

			<DIV CLASS="LINK">
			 <TABLE WIDTH="100%" HEIGHT="28" BORDER="0" CELLPADDING="0" CELLSPACING="0" CLASS="LINKTEXT">
			  <TR VALIGN="MIDDLE">
	  		   <TD WIDTH="100%">
				<SPAN CLASS="ACTIVELINK" ID="DocTemp" TITLE="指定创建新文档时应用程序文档模板要使用的值。仅在基类为 CFormView 并且“生成 DocTemplate 资源”选中时才启用。" onClick="if (this.className.toLowerCase() == 'inactivelink') return; Next(document, 'DocTemp.htm');" TABINDEX="1">文档模板属性</SPAN>
			   </TD>
	  		   <TD WIDTH="4">
			  	<IMG SRC="../../../../../1033/Images/spacer.gif" HEIGHT="1" WIDTH="4">
			   </TD>
			  </TR>
			 </TABLE>
			</DIV>

	   	  <!--CLOSE OF NAVIGATIONAL LINKS//-->
		  </TD>
		  <TD WIDTH="1">
		   <DIV CLASS="VERTLINE">
			 <IMG SRC="../../../../../1033/Images/spacer.gif" WIDTH="1" HEIGHT="1" ALT="" BORDER="0">
		   </DIV>
		  </TD>
		 </TR>
		 </TABLE>
		</TD>
	   </TR>
	   </TABLE>

	   <!--CLOSE OF NAVIGATION TABLE//-->
	   </TD>

	   <TD VALIGN="TOP" HEIGHT="100%">
	   <!--OPEN OF CONTENT AND BUTTON TABLE//-->

	   	<TABLE CLASS="ONE" BORDER="0" CELLPADDING="0" CELLSPACING="0">
		<COL WIDTH="100%">
		 <TR VALIGN="TOP">
		  <TD HEIGHT="100%">
	   	  <!--OPEN OF CONTENT//-->

		  	<TABLE CLASS="CONTENT" BORDER="0" CELLPADDING="0" CELLSPACING="0">
			<COL WIDTH="12"><COL><COL WIDTH="12"><COL><COL WIDTH="12">
 			 <TR>
  			  <TD VALIGN="TOP" HEIGHT="12" COLSPAN="3">
  				&nbsp;
  			  </TD>
 			 </TR>
 			 <TR>
 			 <TD VALIGN="TOP" WIDTH="12">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="TOP">
 				<SPAN CLASS="itemTextTop" ID="CLASS_NAME_SPAN" TITLE="将创建的新类的名称。">
	  	 			 <LABEL FOR="CLASS_NAME" ID="CLASS_NAME_LABEL">类名(<U>L</U>): </LABEL>
	  	 			 <BR>
	  	 			 <INPUT CLASS="sideBtn" ID="CLASS_NAME" TYPE="text" ACCESSKEY="l" VALUE="" onPropertychange="OnClass();">
				</SPAN>

				<P CLASS="ElementSpacer16">&nbsp;</P>

				<SPAN CLASS="itemText" ID="BASE_CLASS_SPAN" TITLE="类的名称，新类将从该类派生。">
					 <LABEL FOR="BASE_CLASS" ID="BASE_CLASS_LABEL">基类(<U>B</U>): </LABEL>
					 <BR>
					 <SELECT CLASS="sideBtn" ID="BASE_CLASS" SIZE="1" ACCESSKEY="b" onChange="OnBase();">
					 </SELECT>
				</SPAN>

				<P CLASS="ElementSpacer6">&nbsp;</P>

				<SPAN CLASS="itemText" ID="IDD_DIALOG_SPAN" TITLE="对话框资源的 ID。键入 ID 将创建一个新的对话框资源。如果现有的资源 ID 可用，也可从列表中选择。仅在基类为以下类之一时启用:  CDialog、CFormView、COlePropertyPage、CPropertyPage 或 CDHtmlDialog。">
					 <LABEL ID="idd_dialog_title" ACCESSKEY="d" FOR="DialogList">对话框 ID(<U>D</U>): </LABEL>
					 <BR>
					 <INPUT CLASS="sideBtn" ID="IDD_DIALOG" TYPE="HIDDEN"></INPUT>
					 <OBJECT CLASS="itemText" ID="DialogList" ACCESSKEY="d" CLASSID="CLSID:087da97a-e2f4-472a-bb48-0bcdfaa20fb3">
					 </OBJECT>
				 </SPAN>

				<P CLASS="ElementSpacer6">&nbsp;</P>

  				<NOBR>
				  <SPAN CLASS="itemText" ID="HEADER_FILE_SPAN" TITLE="将定义类的头文件的名称。">
	  	 			<LABEL FOR="HEADER_FILE" ID="HEADER_FILE_LABEL">.h 文件(<U>I</U>): </LABEL>
	  	 			<BR>
	  	 			<INPUT CLASS="sideBtn2" ID="HEADER_FILE" ACCESSKEY="i" NAME="IsapiDirectoryName" TYPE="text" onPropertychange="window.external.AddSymbol('HEADER_FILE_VALID', false);">
					<BUTTON CLASS="buttonClass3Custom" ID="BrowseHeaderBtn" TYPE="BUTTON" TITLE="浏览头文件。" onClick="OnBrowseHeaderFile();">...</BUTTON>
				  </SPAN>
				</NOBR>

				<P CLASS="ElementSpacer6">&nbsp;</P>

  				<NOBR>
				  <SPAN CLASS="itemText" ID="IMPL_FILE_SPAN" TITLE="此类的实现文件的名称。">
	  	 			<LABEL FOR="IMPL_FILE" ID="IMPL_FILE_LABEL">.cpp 文件(<U>P</U>): </LABEL>
	  	 			<BR>
	  	 			<INPUT CLASS="sideBtn2" ID="IMPL_FILE" ACCESSKEY="p" TYPE="text"  onPropertychange="window.external.AddSymbol('IMPL_FILE_VALID', false);">
					<BUTTON CLASS="buttonClass3Custom" ID="BrowseImplBtn" TYPE="BUTTON" TITLE="浏览实现文件。" onClick="OnBrowseImplFile();">...</BUTTON>
				  </SPAN>
				</NOBR>

				<P CLASS="ElementSpacer16">&nbsp;</P>

				<SPAN CLASS="itemText" ID="ACCESSIBILITY_SECTION" TITLE="启用 Active Accessibility 支持。">
	  				 <INPUT CLASS="CheckBox" TYPE="checkbox" ID="ACCESSIBILITY" ACCESSKEY="y">
	  	 			 <DIV CLASS="itemTextCheckboxA">
		  			  <LABEL FOR="ACCESSIBILITY" ID="ACCESSIBILITY_LABEL">Active Accessibility(<U>Y</U>)</LABEL>
	  	 			 </DIV>
				</SPAN>
			  </TD>
  		  	  <TD VALIGN="TOP" WIDTH="12">
  				&nbsp;
  		  	  </TD>
			  <TD VALIGN="TOP">
 				<SPAN CLASS="itemTextTop" ID="HTML_ID_SPAN" TITLE="HTML 资源的 ID。仅在基类为 CDHtmlDialog 时才启用。">
	  	 			  <LABEL FOR="HTML_ID" ID="HTML_ID_LABEL">DHTML 资源 ID(<U>S</U>): </LABEL>
					  <BR>
	  	 			  <INPUT CLASS="sideBtn" ID="HTML_ID" TYPE="text" ACCESSKEY="s">
				</SPAN>

				<P CLASS="ElementSpacer16">&nbsp;</P>

  				<SPAN CLASS="itemText" ID="HTML_FILE_SPAN" TITLE="HTML 文件名。仅在基类为 CDHtmlDialog 时才启用">
	  	 			 <LABEL FOR="HTML_FILE" ID="HTML_FILE_LABEL">.HTM 文件(<U>M</U>): </LABEL>
					 <BR>
	  	 			 <INPUT CLASS="sideBtn" ID="HTML_FILE" ACCESSKEY="m" TYPE="text"  onPropertychange="window.external.AddSymbol('HTML_FILE_VALID', false);">
				</SPAN>

				<P CLASS="ElementSpacer16">&nbsp;</P>

				 <SPAN CLASS="itemText">
					 <SPAN CLASS="itemText" ID="automation_options_title">自动化: </SPAN>
					 <P CLASS="Spacer">&nbsp;</P>

 					 <SPAN ID="AUTOMATION_NONE_SPAN" TITLE="类不支持自动化。">
	  				 <INPUT TYPE="radio" CLASS="Radio" NAME="automation" ID="AUTOMATION_NONE" ACCESSKEY="n">
	  	 			 <DIV CLASS="itemTextRadioB">
							<LABEL FOR="AUTOMATION_NONE" ID="AUTOMATION_NONE_LABEL">无(<U>N</U>)</LABEL>
	  	 			 </DIV>
					 </SPAN>

	  				 <BR>

 					 <SPAN ID="AUTOMATION_SPAN" TITLE="类支持自动化。">
	  			 	 <INPUT TYPE="radio" CLASS="Radio" NAME="automation" ID="AUTOMATION" ACCESSKEY="A">
	  	 			 <DIV CLASS="itemTextRadioB">
				  			  <LABEL FOR="AUTOMATION" ID="AUTOMATION_LABEL">自动化(<U>A</U>)</LABEL>
	  	 			 </DIV>
					 </SPAN>

	  				 <BR>

 					 <SPAN ID="CREATABLE_SPAN" TITLE="允许客户端通过其 CLSID 或 ProgID 创建此类。">
	  				 <INPUT TYPE="radio" CLASS="Radio" NAME="automation" ID="CREATABLE" ACCESSKEY="e" onpropertychange="OnCreatable();">
	  	 			 <DIV CLASS="itemTextRadioB">
				  			  <LABEL FOR="CREATABLE" ID="CREATABLE_LABEL">可按类型 ID 创建(<U>E</U>)</LABEL>
	  	 			 </DIV>
					 </SPAN>
				</SPAN>

				<P CLASS="ElementSpacer2">&nbsp;</P>

				<SPAN CLASS="itemText" ID="TYPEID_SPAN" TITLE="客户端用来取代 CLSID 创建此组件的编程 ID。">
	  	 			 <LABEL FOR="TYPEID" ID="TYPEID_LABEL">类型 ID(<U>T</U>): </LABEL>
	  	 			 <BR>
	  	 			 <INPUT CLASS="sideBtn" maxlength="39" ID="TYPEID" TYPE="text" ACCESSKEY="t">
				</SPAN>

				<P CLASS="ElementSpacer16">&nbsp;</P>

				<SPAN CLASS="itemText" ID="GEN_DOCTEMPLATE_SECTION" TITLE="生成要与文档模板相关联的字符串、图标和菜单资源。仅当项目支持 Doc/View 并且基类为 CFormView 时才启用。">
	  				 <INPUT CLASS="CheckBox" TYPE="checkbox" ID="GEN_DOCTEMPLATE" ACCESSKEY="g" onpropertychange="OnGenDocTemplate()">
	  	 			 <DIV CLASS="itemTextCheckboxA">
		  			  <LABEL FOR="GEN_DOCTEMPLATE" ID="GEN_DOCTEMPLATE_LABEL">生成 DocTemplate 资源(<U>G</U>)</LABEL>
	  	 			 </DIV>
				</SPAN>
  		  	  </TD>
  		  	  <TD VALIGN="TOP" WIDTH="12">
  				&nbsp;
  		  	  </TD>
 		  	 </TR>
 			 <TR>
  			  <TD VALIGN="TOP" HEIGHT="100%" COLSPAN="3">
  				&nbsp;
  			  </TD>
 			 </TR>
		 	</TABLE>

	   	  <!--CLOSE OF CONTENT//-->
		  </TD>
		 </TR>
		 <TR VALIGN="BOTTOM">
		  <TD>
	   	  <!--OPEN OF BUTTON HTML//-->

		  	<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
			<COL WIDTH="12"><COL><COL WIDTH="75"><COL WIDTH="4"><COL WIDTH="75"><COL WIDTH="4"><COL WIDTH="75"><COL WIDTH="12">
			 <TR>
  			  <TD VALIGN="TOP" CLASS="RULE" COLSPAN="8" HEIGHT="2">
				<TABLE BORDER="0" WIDTH="100%" HEIGHT="1" CELLPADDING="0" CELLSPACING="0">
  	 			 <TR VALIGN="TOP">
  	  			  <TD HEIGHT="1" WIDTH="100%" BGCOLOR="BUTTONSHADOW"></TD>
  	  			  <TD HEIGHT="1" WIDTH="1" BGCOLOR="WINDOW"></TD>
  	 			 </TR>
				</TABLE>
  			  </TD>
 			  </TR>

 			  <TR>
  			  <TD VALIGN="TOP" HEIGHT="11" COLSPAN="8">
  				&nbsp;
  			  </TD>
 			 </TR>

 			<TR>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="12">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="TOP" HEIGHT="23">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="FinishBtn" onClick="OnFinish(document);">完成</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="4">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="CancelBtn" onClick="window.external.Finish(document, 'cancel');">取消</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="4">
  				&nbsp;
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="75">
  				<BUTTON CLASS="BUTTONS" ID="HelpBtn" onClick="window.external.OnHelp('vc.codewiz.class.mfc.simple.overview');">帮助</BUTTON>
  			  </TD>
  			  <TD VALIGN="MIDDLE" HEIGHT="23" WIDTH="12">
  				&nbsp;
  			  </TD>
 			 </TR>

 			 <TR>
  			  <TD VALIGN="TOP" HEIGHT="12" COLSPAN="8">
  				&nbsp;
  			  </TD>
 			 </TR>
			</TABLE>

	   	  <!--CLOSE OF BUTTON HTML//-->
		  </TD>
		 </TR>
		</TABLE>

  	<!--CLOSE OF NAVIGATION, CONTENT, AND BUTTON TABLES//-->
 	</TD>
  </TR>
</TABLE>

</BODY>
</HTML>

<SCRIPT LANGUAGE="JSCRIPT">

var tab_array = new Array();
tab_array[0] = Default;
tab_array[1] = DocTemp;
var g_nDlgIndex;

function InitDocument(document)
{
	setDirection();

	if (window.external.FindSymbol("DOCUMENT_FIRST_LOAD"))
	{
		var L_WizardDialogTitle_Text = "MFC 添加类向导";
		window.external.AddSymbol("WIZARD_DIALOG_TITLE", L_WizardDialogTitle_Text);
		window.external.SetDefaults(document);
		CreateGuids();
		var strProjName = window.external.FindSymbol("PROJECT_NAME");
		window.external.AddSymbol("SAFE_PROJECT_IDENTIFIER_NAME", CreateIdentifierSafeName(strProjName));
		SetLocaleForResources(window.external.GetHostLocale());
	}
	PopulateUnusedDialogIDs();
	DialogList.Enabled = false;
	g_nDlgIndex = DialogList.tabIndex;
	DialogList.tabIndex = -1;
	idd_dialog_title.disabled = true;

	for (var nCntr=0; nCntr< aryClassInfo.length; nCntr++)
	{
		var strBaseClass = GetClassName(aryClassInfo[nCntr]);
		if (window.external.FindSymbol("IS_PARENT_DIALOG")=="true")
		{
			if (strBaseClass != "CDialog" && strBaseClass != "CDialogEx" && strBaseClass != "CFormView" && strBaseClass != "COlePropertyPage" && strBaseClass != "CPropertyPage" && strBaseClass != "CDHtmlDialog")
				continue;
		}
		if (window.external.FindSymbol("IS_DEVICE_PROJECT")=="true")
		{
			if (strBaseClass != "CAsyncSocket" && strBaseClass != "CButton" && strBaseClass != "CCmdTarget" && strBaseClass != "CComboBox" && strBaseClass != "CConnectionPoint" &&
			    strBaseClass != "CControlBar" && strBaseClass != "CDateTimeCtrl" && strBaseClass != "CDialog" && strBaseClass != "CDocument" && strBaseClass != "CEdit" &&
			    strBaseClass != "CFileDialog" && strBaseClass != "CFormView" && strBaseClass != "CFrameWnd" && strBaseClass != "CHeaderCtrl" && strBaseClass != "CListBox" &&
			    strBaseClass != "CListCtrl" && strBaseClass != "CMonthCalCtrl" && strBaseClass != "CObject" && strBaseClass != "CProgressCtrl" && strBaseClass != "CPropertyPage" &&
			    strBaseClass != "CPropertySheet" && strBaseClass != "CScrollBar" && strBaseClass != "CScrollView" && strBaseClass != "CSliderCtrl" &&
			    strBaseClass != "CSpinButtonCtrl" && strBaseClass != "CStatic" && strBaseClass != "CStatusBar" && strBaseClass != "CStatusBarCtrl" && strBaseClass != "CTabCtrl" &&
			    strBaseClass != "CToolBar" && strBaseClass != "CToolBarCtrl" && strBaseClass != "CTreeCtrl" && strBaseClass != "CView" && strBaseClass != "CWinApp" &&
			    strBaseClass != "CWinThread" && strBaseClass != "CWnd" && strBaseClass != "CPagerCtrl" && strBaseClass != "CNetAddressCtrl")
				continue;
		}
		var oOption = document.createElement("OPTION");
		oOption.text = strBaseClass;
		oOption.value = strBaseClass;
		BASE_CLASS.add(oOption);
	}
	window.external.Load(document);

	var oProj = window.external.ProjectObject;
	if (GetProjectFile(oProj, "IDL") || GetProjectFile(oProj, "ODL"))
		window.external.AddSymbol("PROJECT_SUPPORTS_AUTOMATION", true);
	else
		window.external.AddSymbol("PROJECT_SUPPORTS_AUTOMATION", false);

	OnBase();
	OnCreatable();
}

function GetClassName(strClassInfo)
{
	return strClassInfo.substr(0, strClassInfo.indexOf("|"));
}

function GetIncludeFile(strBaseClass)
{
	for (var nCntr=0; nCntr < aryClassInfo.length; nCntr++)
	{
		var strClass = GetClassName(aryClassInfo[nCntr]);
		if (strClass == strBaseClass)
		{
			strClassInfo = aryClassInfo[nCntr];
			var nStart = strClassInfo.indexOf("|") + 1;
			var nEnd = strClassInfo.indexOf("|", nStart);
			return strClassInfo.substring(nStart, nEnd);
		}
	}
	return false;
}

function GetTemplateFile(strBaseClass)
{
	for (var nCntr=0; nCntr < aryClassInfo.length; nCntr++)
	{
		var strClass = GetClassName(aryClassInfo[nCntr]);
		if (strClass == strBaseClass)
		{
			strClassInfo = aryClassInfo[nCntr];
			var nStart = strClassInfo.indexOf("|") + 1;
			nStart = strClassInfo.indexOf("|", nStart) + 1;
			var nEnd = strClassInfo.indexOf("|", nStart);
			return strClassInfo.substring(nStart, nEnd);
		}
	}
	return false;
}

function GetAutoInfo(strClassInfo)
{
	return strClassInfo.charAt(strClassInfo.length-3);
}

function SupportsAA(strClassInfo)
{
	if ("Y" == strClassInfo.charAt(strClassInfo.length-1))
		return true;
	else
		return false;
}

function CreateGuids()
{
	var strGuid = window.external.CreateGuid();

	var strVal = window.external.FormatGuid(strGuid, 0);
	window.external.AddSymbol("DISPIID_REGISTRY_FORMAT", strVal);
	strVal = window.external.FormatGuid(strGuid, 2);
	window.external.AddSymbol("DISPIID_STATIC_CONST_GUID_FORMAT", strVal);

	strGuid = window.external.CreateGuid();

	strVal = window.external.FormatGuid(strGuid, 0);
	window.external.AddSymbol("CLSID_REGISTRY_FORMAT", strVal);
	strVal = window.external.FormatGuid(strGuid, 1);
	window.external.AddSymbol("CLSID_IMPLEMENT_OLECREATE_FORMAT", strVal);
}

function Next(document, linkto)
{
	if (CLASS_NAME.length && !ValidateInput())
		return;
	SetSymbols();
	window.external.Next(document, linkto);
}

function OnFinish(document)
{
	if (!ValidateInput())
		return;

	SetSymbols();
	IDD_DIALOG.value = DialogList.Value;
	OnWizFinish(document);
}


function OnClass()
{
	var strClassName = CLASS_NAME.value;
	if (strClassName.length == 0 || (strClassName.length == 1 && strClassName.charAt(0) == "C"))
	{
		if (DialogList.ListIndex == -1)
			DialogList.Value = "";
		HTML_ID.value = "";
		HTML_FILE.value = "";
		HEADER_FILE.value = "";
		IMPL_FILE.value = "";
		TYPEID.value = "";
	}
	else
	{
		var strSafeProjIdName = window.external.FindSymbol("SAFE_PROJECT_IDENTIFIER_NAME");
		var strSafeResIDName = CreateSafeName(strClassName);

		if (strClassName.charAt(0) == "C" && strClassName.length > 1 && strClassName.charAt(1) >= "A" && strClassName.charAt(1) <= "Z")
		{
			if (DialogList.ListIndex == -1)
				DialogList.Value = "IDD_" + strSafeResIDName.substr(1).toUpperCase();
			HTML_ID.value = "IDR_HTML_" + strSafeResIDName.substr(1).toUpperCase();
			HTML_FILE.value = strClassName.substr(1) + ".htm";
			HEADER_FILE.value = strClassName.substr(1) + ".h";
			IMPL_FILE.value = strClassName.substr(1) + ".cpp";
			var strTypeID = strSafeProjIdName.substr(0,30) + "." + strClassName.substr(1);
			TYPEID.value = strTypeID.substr(0,39);
		}
		else
		{
			if (DialogList.ListIndex == -1)
				DialogList.Value = "IDD_" + strSafeResIDName.toUpperCase();
			HTML_ID.value = "IDR_HTML_" + strSafeResIDName.toUpperCase();
			HTML_FILE.value = strClassName + ".htm";
			HEADER_FILE.value = strClassName + ".h";
			IMPL_FILE.value = strClassName + ".cpp";
			var strTypeID = strSafeProjIdName.substr(0,30) + "." + strClassName;
			TYPEID.value = strTypeID.substr(0,39);
		}
	}
}

function OnGenDocTemplate()
{
	if (!GEN_DOCTEMPLATE_SECTION.disabled && GEN_DOCTEMPLATE.checked)
	{
		DocTemp.className = "activelink";
		NextBtn.disabled = false;
	} else {
		DocTemp.className = "inactivelink";
		NextBtn.disabled = true;
	}
}

var gbDocView = false;
var gbDocViewCheckDone = false;

function FindDocTemplate(oCM)
{
	var oClasses = oCM.GetClassesDerivedFrom("CWinApp");

	var bDocTemplateFound = false;
	if (oClasses != null)
	{
		for (var nCntr = 1; nCntr <= oClasses.Count && !bDocTemplateFound; nCntr++)
		{
			var oClass = oClasses(nCntr);
			var oInitInstance = oClass.Functions.Find("InitInstance");
			if (oInitInstance)
			{
				if (oInitInstance.BodyText.indexOf("new CMultiDocTemplate") != -1)
				{
					window.external.AddSymbol("MDI_APP", true);
					bDocTemplateFound = true;
				}
				else if (oInitInstance.BodyText.indexOf("new CSingleDocTemplate") != -1)
					bDocTemplateFound = true;
			}
		}
	}
	return bDocTemplateFound;
}

function FindSpecialClass(oCM, strBase, strSymbol)
{
	var oClasses = oCM.GetClassesDerivedFrom(strBase);
	if (oClasses != null && oClasses.Count > 0)
	{
		var oClass = oClasses.Item(1);
		window.external.AddSymbol(strSymbol, oClass.FullName);
		return true;
	}
	return false;
}

function IsDocView()
{
	if (gbDocViewCheckDone)
		return gbDocView;

	var oCM = window.external.ProjectObject.CodeModel;

	var bDocTemplateFound = false;
	var bDocFound = false;
	var bMDIFrameFound = false;
	var bSDIFrameFound = false;

	if (FindDocTemplate(oCM))
	{
		bDocTemplateFound = true;
		if (FindSpecialClass(oCM, "CDocument", "DOCUMENT_CLASS"))
		{
			bDocFound = true;
			if (FindSpecialClass(oCM, "CMDIChildWnd", "FRAME_CLASS"))
				bMDIFrameFound = true;

			if (!bMDIFrameFound)
			{
				if (FindSpecialClass(oCM, "CFrameWnd", "FRAME_CLASS"))
					bSDIFrameFound = true;
			}
		}
	}
	
	if (bDocTemplateFound && bDocFound && (bMDIFrameFound || bSDIFrameFound))
		gbDocView = true;

	gbDocViewCheckDone = true;
	return gbDocView;
}

function OnBase()
{
	var strBaseClass = BASE_CLASS.options[BASE_CLASS.selectedIndex].value;

	// Get rid of "(with splitter)" part.
	var indexOfPar = strBaseClass.indexOf("(");
	var strBaseClassSafe = indexOfPar == -1 ? strBaseClass : strBaseClass.substr(0, indexOfPar);
	
	window.external.AddSymbol("BASE_CLASS_SAFE", strBaseClassSafe);

	AUTOMATION_NONE.checked = true;

	DisabledControls(BASE_CLASS.selectedIndex);
	if (strBaseClass == "CFormView" && IsDocView())
		GEN_DOCTEMPLATE_SECTION.disabled = false;
	else
		GEN_DOCTEMPLATE_SECTION.disabled = true;
	OnGenDocTemplate();

	if (window.external.FindSymbol("IS_PARENT_DIALOG")=="false")
	{
		if (strBaseClass == "CDialog" || strBaseClass == "CDialogEx" || strBaseClass == "CFormView" || strBaseClass == "COlePropertyPage" || strBaseClass == "CPropertyPage" || strBaseClass == "CDHtmlDialog")
		{
			DialogList.Enabled = true;
			DialogList.tabIndex = g_nDlgIndex;
			idd_dialog_title.disabled = false;
		}
		else
		{
			DialogList.Enabled = false;
			DialogList.tabIndex = -1;
			idd_dialog_title.disabled = true;
		}
	}
	if (SupportsAA(aryClassInfo[BASE_CLASS.selectedIndex]))
		ACCESSIBILITY_SECTION.disabled = false;
	else
		ACCESSIBILITY_SECTION.disabled = true;
}

function DisabledControls(nIndex)
{
	var cAutoSupport = GetAutoInfo(aryClassInfo[nIndex]);
	if (!window.external.FindSymbol("PROJECT_SUPPORTS_AUTOMATION"))
	{
		if (cAutoSupport == "C")
			cAutoSupport = "A";
	}

	switch(cAutoSupport)
	{
		case "C":
			automation_options_title.disabled = false;
			AUTOMATION_NONE_SPAN.disabled = false;
			AUTOMATION_SPAN.disabled = false;
			CREATABLE_SPAN.disabled = false;
			break;

		case "A":
			automation_options_title.disabled = false;
			AUTOMATION_NONE_SPAN.disabled = false;
			AUTOMATION_SPAN.disabled = false;
			CREATABLE_SPAN.disabled = true;
			break;

		default:
			automation_options_title.disabled = true;
			AUTOMATION_NONE_SPAN.disabled = true;
			AUTOMATION_SPAN.disabled = true;
			CREATABLE_SPAN.disabled = true;
			break;
	}

	if (GetClassName(aryClassInfo[nIndex]) == "CDHtmlDialog")
	{
		HTML_ID.disabled = false;
		HTML_ID_LABEL.disabled = false;
		HTML_FILE.disabled = false;
		HTML_FILE_LABEL.disabled = false;
	}
	else
	{
		HTML_ID.disabled = true;
		HTML_ID_LABEL.disabled = true;
		HTML_FILE.disabled = true;
		HTML_FILE_LABEL.disabled = true;
	}
}

function CheckNamespaceForDialogIdUsage(oNamespace, strDialogId)
{
	if (oNamespace.DialogClasses(strDialogId).Count != 0)
		return true;
		
	var oNamespaces = oNamespace.Namespaces;
	for(var nCntr = 1; nCntr <= oNamespaces.Count; nCntr++) 
	{
		var oNestedNamespace = oNamespaces(nCntr);
		if (CheckNamespaceForDialogIdUsage(oNestedNamespace, strDialogId))
			return true;
	}
			
	return false;
}

function PopulateUnusedDialogIDs()
{
	if (window.external.FindSymbol("IS_PARENT_DIALOG")=="true")
	{
		DialogList.AddItem(window.external.FindSymbol("ITEM_NAME"));
		DialogList.ListIndex = 0;
		return;
	}
	var GNS = window.external.ProjectObject.Codemodel;

	var strDialogIds = "";
	try
	{
		strDialogIds = window.external.GetDialogIds();
	}
	catch(e)
	{
		var L_WarningLocation_Text = "default.htm PopulateUnusedDialogIDs() 中有错误:\r\n";
		var L_Warning1_Text = "无法访问资源信息。  请检查 .rc 文件是否在另一个编辑器中打开。";
		window.external.ReportError(L_WarningLocation_Text + L_Warning1_Text);
	}

	var len = strDialogIds.length;
	var iBegin = 0;
	var iEnd = 0;
	while(iEnd>=0)
	{
		var strDialogId;
		iEnd = strDialogIds.indexOf(",", iBegin);
		if(iEnd>=0)
		{
			strDialogId = strDialogIds.substr(iBegin, iEnd-iBegin);
			iBegin=iEnd+1;
		}
		else
		{
			strDialogId = strDialogIds.substr(iBegin);
		}
		
		var bIdInUse = GNS.DialogClasses(strDialogId).Count != 0;
		
		if(!bIdInUse)
		{
			var oNamespaces = GNS.Namespaces;
			for(var nCntr = 1; nCntr <= oNamespaces.Count; nCntr++) 
			{
				bIdInUse = CheckNamespaceForDialogIdUsage(oNamespaces(nCntr), strDialogId);
				if(bIdInUse)
					break;
			}
		}
		
		// Id is already in use
		if(bIdInUse)
			continue;
		DialogList.AddItem(strDialogId);
	}
}

function SetSymbols()
{
	var strBaseClass = BASE_CLASS.options[BASE_CLASS.selectedIndex].value;
	switch(strBaseClass)
	{
		case "COleServerDoc":
			window.external.AddSymbol("COLESERVERDOC", true);
			break;
		case "CFormView":
			if (window.external.FindSymbol("DOCUMENT_FILE_EXTENSION").length == 0)
			{
				var strClassName = CLASS_NAME.value;
				if (strClassName.charAt(0) == "C" || strClassName.charAt(0) == "c")
					strClassName = strClassName.substr(1);
				var nMax = window.external.FindSymbol("MAX_DOC_TYPE_NAME");
				if (strClassName.length > nMax)
					window.external.AddSymbol("DOCUMENT_TYPE_NAME", strClassName.substr(0, nMax));
				else
					window.external.AddSymbol("DOCUMENT_TYPE_NAME", strClassName);

				nMax = window.external.FindSymbol("MAX_FILE_NEW_NAME_SHORT");
				if (strClassName.length > nMax)
					window.external.AddSymbol("DOCUMENT_FILE_NEW_NAME_SHORT", strClassName.substr(0, nMax));
				else
					window.external.AddSymbol("DOCUMENT_FILE_NEW_NAME_SHORT", strClassName);

				nMax = window.external.FindSymbol("MAX_FILE_TYPE_ID");
				if (strClassName.length > nMax)
					window.external.AddSymbol("DOCUMENT_FILE_TYPE_ID", strClassName.substr(0, nMax) + ".Document");
				else
					window.external.AddSymbol("DOCUMENT_FILE_TYPE_ID", strClassName + ".Document");

				nMax = window.external.FindSymbol("MAX_FILE_NEW_NAME_LONG");
				if (strClassName.length > nMax)
					window.external.AddSymbol("DOCUMENT_FILE_NEW_NAME_LONG", strClassName.substr(0, nMax) + " Document");
				else
					window.external.AddSymbol("DOCUMENT_FILE_NEW_NAME_LONG", strClassName + " Document");

				if (strClassName.length > 3)
				{
					window.external.AddSymbol("DOCUMENT_FILE_EXTENSION", strClassName.substr(0, 3).toLowerCase());
					window.external.AddSymbol("DOCUMENT_FILTER_NAME", strClassName + " Files (*." + strClassName.substr(0, 3).toLowerCase() + ")");
				}
				else
				{
					window.external.AddSymbol("DOCUMENT_FILE_EXTENSION", strClassName.toLowerCase());
					window.external.AddSymbol("DOCUMENT_FILTER_NAME", strClassName + " Files (*." + strClassName.toLowerCase() + ")");
				}

				window.external.AddSymbol("DOCUMENT_MAIN_FRAME_CAPTION", strClassName);
			}
			break;
		case "COleClientItem":
			window.external.AddSymbol("COLECLIENTITEM", true);
			break;
		case "CColorDialog":
			window.external.AddSymbol("CCOLORDIALOG", true);
			break;
		case "CConnectionPoint":
			window.external.AddSymbol("CCONNECTIONPOINT", true);
			break;
		case "CDocObjectServer":
			window.external.AddSymbol("CDOCOBJECTSERVER", true);
			break;
		case "CDocObjectServerItem":
			window.external.AddSymbol("CDOCOBJECTSERVERITEM", true);
			break;
		case "CFileDialog":
			window.external.AddSymbol("CFILEDIALOG", true);
			break;
		case "CFontDialog":
			window.external.AddSymbol("CFONTDIALOG", true);
			break;
		case "CPageSetupDialog":
			window.external.AddSymbol("CPAGESETUPDIALOG", true);
			break;
		case "CPrintDialog":
			window.external.AddSymbol("CPRINTDIALOG", true);
			break;
		case "CInternetSession":
			window.external.AddSymbol("CINTERNETSESSION", true);
			break;
		case "CPropertyPage":
			window.external.AddSymbol("CPROPERTYPAGE", true);
			break;
		case "CControlBar":
			window.external.AddSymbol("CCONTROLBAR", true);
			break;
		case "CView":
			window.external.AddSymbol("CVIEW", true);
			break;
		case "CVSToolsListBox":
			window.external.AddSymbol("CVSTOOLSLISTBOX", true);
			break;
		default:
			break;
	}

	if (DialogList.Enabled)
	{
		if (DialogList.ListIndex == -1)
		{
			var strDialogID = DialogList.Value;
			var bDlgExists = false;
			for (var nCntr = 0; nCntr < DialogList.Count; nCntr++)
			{
				if (strDialogID == DialogList.Item(nCntr))
				{
					bDlgExists = true;
					break;
				}
			}
			if (!bDlgExists)
				window.external.AddSymbol("CREATE_DIALOG", true);
		}
		IDD_DIALOG.value = DialogList.Value;
	}
	var strTemplateHeader = GetTemplateFile(strBaseClass) + ".h";
	var strTemplateImpl = GetTemplateFile(strBaseClass) + ".cpp";
	var strIncludeHeader = "<" + GetIncludeFile(strBaseClass) + ">";
	window.external.AddSymbol("TEMPLATE_HEADER", strTemplateHeader);
	window.external.AddSymbol("TEMPLATE_IMPL", strTemplateImpl);
	window.external.AddSymbol("INCLUDE_HEADER", strIncludeHeader);

	var strClassName = CLASS_NAME.value;
	var strSafeClassName = CreateIdentifierSafeName(strClassName);
	if (strSafeClassName.substr(0,1) == "C")
		strSafeClassName = strSafeClassName.substr(1, strSafeClassName.length);
	window.external.AddSymbol("CLASS_NAME_ROOT", strSafeClassName);

	var oProj = window.external.ProjectObject;
	var strProjName = window.external.FindSymbol("PROJECT_NAME");
	//Avoid including project_name.h in mfc ext dll projects
	if (oProj.Object.Files(strProjName + ".h"))
	{
	    window.external.AddSymbol("PROJECT_NAME_HEADER", true);
	} else
	{
	    window.external.AddSymbol("PROJECT_NAME_HEADER", false);
	}
}

function OnCreatable()
{
	TYPEID.disabled = true;
	TYPEID_LABEL.disabled = true;

	if (CREATABLE.checked && !CREATABLE.disabled)
	{
		TYPEID.disabled = false;
		TYPEID_LABEL.disabled = false;
	}
}

function OnBrowseHeaderFile()
{
	var strFile;
	try
	{
		L_Title1_Text = "VS 向导选择文件";
		L_Title2_Text = "Visual C++ 头文件(*.h)\0*.h\0\0";
		strFile = window.external.GetOpenFileNameViaDlg(L_Title1_Text, window.external.FindSymbol("PROJECT_PATH"),  L_Title2_Text, HEADER_FILE.value);
	}
	catch(e)
	{
		if (e.number != OLE_E_PROMPTSAVECANCELLED)
		{
			var L_ErrMsg1_Text = "OnBrowseHeaderFile() 中有错误";
			if (e.description.length != 0)
			{
				L_ErrMsg1_Text += ": ";
				L_ErrMsg1_Text += e.description;
			}
			window.external.ReportError(L_ErrMsg1_Text);
		}
		return;
	}
	HEADER_FILE.value = strFile;
}

function OnBrowseImplFile()
{
	var strFile;
	try
	{
		L_Title3_Text = "VS 向导选择文件";
		L_Title4_Text = "Visual C++ 文件(*.cpp;*.h;*.inl;*.c)\0*.cpp;*.h;*.inl;*.c\0\0";
		strFile = window.external.GetOpenFileNameViaDlg(L_Title3_Text, window.external.FindSymbol("PROJECT_PATH"), L_Title4_Text, IMPL_FILE.value);
	}
	catch(e)
	{
		if (e.number != OLE_E_PROMPTSAVECANCELLED)
		{
			var L_ErrMsg2_Text = "OnBrowseImplFile() 中有错误";
			if (e.description.length != 0)
			{
				L_ErrMsg2_Text += ": ";
				L_ErrMsg2_Text += e.description;
			}
			window.external.ReportError(L_ErrMsg2_Text);
		}
		return;
	}
	IMPL_FILE.value = strFile;
}

function ValidateInput()
{
	var oInvalid = null;

	if (!Validate(CLASS_NAME))
		oInvalid = CLASS_NAME;

	if (oInvalid == null)
		if (!Validate(BASE_CLASS))
			oInvalid = BASE_CLASS;

	if (oInvalid == null)
		if (!Validate(DialogList))
			return false;

	if (oInvalid == null)
		if (!Validate(HEADER_FILE))
			oInvalid = HEADER_FILE;

	if (oInvalid == null)
		if (!Validate(IMPL_FILE))
			oInvalid = IMPL_FILE;

	if (oInvalid == null && HTML_ID.disabled == false)
		if (!Validate(HTML_ID))
			oInvalid = HTML_ID;

	if (oInvalid == null && HTML_FILE.disabled == false)
		if (!Validate(HTML_FILE))
			oInvalid = HTML_FILE;

	if (oInvalid == null)
		if (!Validate(TYPEID))
			oInvalid = TYPEID;

	if (oInvalid != null)
	{
		if (gbShowError)
			window.external.ReportError();
		else
			gbShowError = true;
		oInvalid.focus();
		return false;
	}

	return true;
}

var gbShowError = true;

function Validate(obj)
{
	var bValid = true;
	switch(obj.id)
	{
		case "CLASS_NAME":
			bValid = window.external.ParentObject.ValidateMember(obj.value, vsCMElementClass);
			break;
		case "BASE_CLASS":
			if (BASE_CLASS.selectedIndex == -1)
				bValid = false;
			break;
		case "DialogList":
			if (DialogList.Enabled)
				bValid = window.external.ProjectObject.CodeModel.IsValidID(DialogList.Value);
			break;
		case "HEADER_FILE":
			if (!window.external.FindSymbol("HEADER_FILE_VALID"))
			{
				gbShowError = bValid = CanUseFileName(obj.value, true);
				if (!bValid)
					break;
				window.external.AddSymbol("HEADER_FILE_VALID", true)
			}
			bValid = ValidateFileNameAndEnsureInProject(obj.value, vsCMValidateFileExtCpp);
			if (!bValid)
				break;
			if (HEADER_FILE.value == IMPL_FILE.value)
			{
				var L_ErrMsg_Text = "头文件和实现文件不能同名。";
				oErrObj = new Error(L_ErrMsg_Text);
				SetErrorInfo(oErrObj);
				bValid = false;
			}
			break;
		case "IMPL_FILE":
			if (!window.external.FindSymbol("IMPL_FILE_VALID"))
			{
				gbShowError = bValid = CanUseFileName(obj.value, false, false, true);
				if (!bValid)
					break;
				window.external.AddSymbol("IMPL_FILE_VALID", true)
			}
			bValid = ValidateFileNameAndEnsureInProject(obj.value, vsCMValidateFileExtCppSource);
			break;
		case "HTML_ID":
			if (!HTML_ID.disabled)
				bValid = window.external.ProjectObject.CodeModel.IsValidID(HTML_ID.value);
			break;
		case "HTML_FILE":
			if (!HTML_FILE.disabled)
			{
				if (!window.external.FindSymbol("HTML_FILE_VALID"))
				{
					gbShowError = bValid = CanUseFileName(obj.value, false, true);
					if (!bValid)
						break;
					window.external.AddSymbol("HTML_FILE_VALID", true)
				}
			}
			bValid = ValidateFileNameAndEnsureInProject(HTML_FILE.value, vsCMValidateFileExtHtml);
			break;
		case "TYPEID":
			if (CREATABLE.checked && !CREATABLE_SPAN.disabled)
				bValid = window.external.IsValidProgID(TYPEID.value);
			break;
		default:
			break;
	}

	if (typeof(bValid) == "undefined")
		bValid = false;

	return bValid;
}

var aryClassInfo = new Array();
var index = 0;

//Class Name | Include Header | Template Filename | Flags(C=Createable By TypeID, A=Automation, N=None | Supports Active Accessibility (Y/N))

aryClassInfo[index] = "CAnimateCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CAsyncMonikerFile|afxole.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CAsyncSocket|afxsock.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CBasePane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CBaseTabbedPane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CBitmapButton|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CButton|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CCachedDataPathProperty|afxctl.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CCheckListBox|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CCmdTarget|afxwin.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "CColorDialog|afxdlgs.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CComboBox|afxwin.h|window|C|N|Y"; index = index + 1;
aryClassInfo[index] = "CComboBoxEx|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CConnectionPoint|afxdisp.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CControlBar|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CDatabase|afxdb.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CDataPathProperty|afxctl.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CDateTimeCtrl|afxdtctl.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CDialogEx|afxcontrolbars.h|dialog|C|Y"; index = index + 1;
aryClassInfo[index] = "CDialog|afxwin.h|dialog|C|Y"; index = index + 1;
aryClassInfo[index] = "CDHtmlDialog|afxdhtml.h|dhtmldlg|C|Y"; index = index + 1;
aryClassInfo[index] = "CDialogBar|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CDocItem|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "CDockablePane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CDocObjectServer|afxdocob.h|cmdtarg|A|N"; index = index + 1;
aryClassInfo[index] = "CDocObjectServerItem|afxdocob.h|cmdtarg|A|N"; index = index + 1;
aryClassInfo[index] = "CDocument|afxwin.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "CDragListBox|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CEdit|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CEditView|afxext.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CFileDialog|afxdlgs.h|window|A|Y"; index = index + 1;
aryClassInfo[index] = "CFindReplaceDialog|afxdlgs.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CFontDialog|afxdlgs.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CFormView|afxext.h|formview|C|Y"; index = index + 1;
aryClassInfo[index] = "CFrameWnd|afxwin.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CFrameWndEx|afxcontrolbars.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CHeaderCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CHotKeyCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CHtmlEditDoc|afxhtml.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "CHtmlEditView|afxhtml.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CHtmlView|afxhtml.h|htmlview|C|Y"; index = index + 1;
aryClassInfo[index] = "CInternetSession|afxinet.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CIPAddressCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CLinkCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CListBox|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CListCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CListView|afxcview.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIChildWnd|afxwin.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIChildWnd(with splitter)|afxext.h|mdisplit|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIChildWndEx|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIChildWndEx(with splitter)|afxcontrolbars.h|mdisplit|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIFrameWnd|afxwin.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CMDIFrameWndEx|afxcontrolbars.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCButton|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCCaptionBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCCaptionButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCCaptionMenuButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCColorDialog|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCDesktopAlertDialog|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCDropDownListBox|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCEditBrowseCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCFontComboBox|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCHeaderCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCLinkCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCListCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCMaskedEdit|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCMenuBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCMenuButton|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCOutlookBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCOutlookBarPane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCPropertyGridCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCPropertyPage|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCPropertySheet|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCReBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonBaseElement|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonButtonsGroup|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonCaptionButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonCategory|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonCheckBox|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonColorButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonComboBox|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonEdit|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonLinkCtrl|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonProgressBar|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonSlider|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonTab|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCRibbonUndoButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCShellListCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCShellTreeCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCSpinButtonCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCStatusBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCTabButton|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCTabCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCTasksPane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBar|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarComboBoxButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarDateTimeCtrl|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarDropSource|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarDropTarget|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarEditBoxButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarFontComboBox|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarFontSizeComboBox|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarMenuButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarSpinEditBoxButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolBarSystemMenuButton|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCToolTipCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerOffice2003|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerOffice2007|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerOfficeXP|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerVS2005|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerVS2008|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerWindows|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMFCVisualManagerWindows7|afxcontrolbars.h|generic|C|Y"; index = index + 1;
aryClassInfo[index] = "CMiniFrameWnd|afxwin.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "CMonthCalCtrl|afxdtctl.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CNetAddressCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CObject|afx.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "COleClientItem|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "COleDataSource|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "COleDocIPFrameWnd|afxole.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "COleDocIPFrameWndEx|afxcontrolbars.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "COleDocument|afxole.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "COleDropSource|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "COleDropTarget|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "COleIPFrameWnd|afxole.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "COleIPFrameWndEx|afxcontrolbars.h|frame|C|Y"; index = index + 1;
aryClassInfo[index] = "COleLinkingDoc|afxole.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "COleMessageFilter|afxole.h|cmdtarg|C|N"; index = index + 1;
aryClassInfo[index] = "COlePropertyPage|afxctl.h|oproppg|N|Y"; index = index + 1;
aryClassInfo[index] = "COleServerDoc|afxole.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "COleServerDocEx|afxcontrolbars.h|doc|C|N"; index = index + 1;
aryClassInfo[index] = "COleServerItem|afxole.h|svritem|C|N"; index = index + 1;
aryClassInfo[index] = "CPagerCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPageSetupDialog|afxdlgs.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPaneDialog|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPaneDivider|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPaneFrameWnd|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPreviewViewEx|afxcontrolbars.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CPrintDialog|afxdlgs.h|window|A|Y"; index = index + 1;
aryClassInfo[index] = "CPrintDialogEx|afxdlgs.h|window|A|Y"; index = index + 1;
aryClassInfo[index] = "CProgressCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CPropertyPage|afxdlgs.h|dialog|C|Y"; index = index + 1;
aryClassInfo[index] = "CPropertySheet|afxdlgs.h|propsht|C|Y"; index = index + 1;
aryClassInfo[index] = "CReBar|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CReBarCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CRichEditCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CRichEditView|afxrich.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CScrollBar|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CScrollView|afxwin.h|scrview|C|Y"; index = index + 1;
aryClassInfo[index] = "CSliderCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CSocket|afxsock.h|generic|N|N"; index = index + 1;
aryClassInfo[index] = "CSpinButtonCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CSplitButton|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CStatic|afxwin.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CStatusBar|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CStatusBarCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CTabbedPane|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CTabView|afxcontrolbars.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CTabCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CToolBar|afxext.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CToolBarCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CToolTipCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CTreeCtrl|afxcmn.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CTreeView|afxcview.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CView|afxwin.h|view|C|Y"; index = index + 1;
aryClassInfo[index] = "CVSListBox|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CVSListBoxEditCtrl|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CVSToolsListBox|afxcontrolbars.h|window|C|Y"; index = index + 1;
aryClassInfo[index] = "CWinApp|afxwin.h|thread|C|N"; index = index + 1;
aryClassInfo[index] = "CWinAppEx|afxcontrolbars.h|thread|C|N"; index = index + 1;
aryClassInfo[index] = "CWinThread|afxwin.h|thread|C|N"; index = index + 1;
aryClassInfo[index] = "CWnd|afxwin.h|window|C|Y"; index = index + 1;

</SCRIPT>
<SCRIPT ID="INCLUDE_SCRIPT" LANGUAGE="JSCRIPT"></SCRIPT>
<SCRIPT ID="INCLUDE_COMMON" LANGUAGE="JSCRIPT"></SCRIPT>
<SCRIPT>
	document.scripts("INCLUDE_SCRIPT").src = window.external.FindSymbol("SCRIPT_COMMON_PATH") + "/Script.js";
	document.scripts("INCLUDE_COMMON").src = window.external.FindSymbol("SCRIPT_COMMON_PATH") + "/Common.js";
</SCRIPT>

<SCRIPT FOR="DialogList" EVENT="KeyDown(nKeyCode)">
	OnWizComboKeyDown(nKeyCode);
</SCRIPT>
